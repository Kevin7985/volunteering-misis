CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE IF NOT EXISTS users (
    id UUID DEFAULT uuid_generate_v4(),
    misis_id VARCHAR(100),
    email VARCHAR(500) NOT NULL,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    middle_name VARCHAR(255),
    about VARCHAR(5000),
    avatar VARCHAR(1000),
    is_moderator BOOLEAN,
    is_staff BOOLEAN,
    CONSTRAINT PK_USER PRIMARY KEY (id),
    CONSTRAINT UQ_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS skills (
    id UUID DEFAULT uuid_generate_v4(),
    title VARCHAR(255),
    CONSTRAINT PK_SKILL PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS user_skills (
    id UUID DEFAULT uuid_generate_v4(),
    user_id UUID NOT NULL,
    skill_id UUID NOT NULL,
    CONSTRAINT PK_USER_SKILL PRIMARY KEY (id),
    CONSTRAINT FK_USER_FOR_USER_SKILL FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT FK_SKILL_FOR_USER_SKILL FOREIGN KEY (skill_id) REFERENCES skills (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS categories (
    id UUID DEFAULT uuid_generate_v4(),
    title VARCHAR(255) NOT NULL,
    CONSTRAINT PK_CATEGORY PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
    id UUID DEFAULT uuid_generate_v4(),
    title VARCHAR(255) NOT NULL,
    description VARCHAR(5000),
    volunteer_funcs VARCHAR(5000),
    creator_id UUID NOT NULL,
    category_id UUID,
    location VARCHAR(1000),
    picture VARCHAR(1000),
    start_date TIMESTAMP WITHOUT TIME ZONE,
    finish_date TIMESTAMP WITHOUT TIME ZONE,
    participant_limit INTEGER,
    state VARCHAR(50),
    created_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT PK_EVENT PRIMARY KEY (id),
    CONSTRAINT FK_USER_FOR_EVENT FOREIGN KEY (creator_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT FK_CATEGORY_FOR_EVENT FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS event_skills (
    id UUID DEFAULT uuid_generate_v4(),
    event_id UUID NOT NULL,
    skill_id UUID NOT NULL,
    CONSTRAINT PK_EVENT_SKILL PRIMARY KEY (id),
    CONSTRAINT FK_EVENT_FOR_EVENT_SKILL FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT FK_SKILL_FOR_EVENT_SKILL FOREIGN KEY (skill_id) REFERENCES skills (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS event_participants (
    id UUID DEFAULT uuid_generate_v4(),
    user_id UUID NOT NULL,
    event_id UUID NOT NULL,
    role VARCHAR(50),
    CONSTRAINT PK_EVENT_PARTICIPANT PRIMARY KEY (id),
    CONSTRAINT FK_USER_FOR_EVENT_PARTICIPANT FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT FK_EVENT_FOR_EVENT_PARTICIPANT FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS event_tasks (
    id UUID DEFAULT uuid_generate_v4(),
    event_id UUID NOT NULL,
    creator_id UUID NOT NULL,
    executor_id UUID,
    title VARCHAR(255),
    description VARCHAR(5000),
    is_complete BOOLEAN,
    start_date TIMESTAMP WITHOUT TIME ZONE,
    finish_date TIMESTAMP WITHOUT TIME ZONE,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT PK_EVENT_TASK PRIMARY KEY (id),
    CONSTRAINT FK_EVENT_FOR_EVENT_TASKS FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT FK_CREATOR_FOR_EVENT_TASKS FOREIGN KEY (creator_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT FK_EXECUTOR_FOR_EVENT_TASKS FOREIGN KEY (executor_id) REFERENCES users (id) ON DELETE CASCADE
);